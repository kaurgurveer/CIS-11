INCLUDE Irvine32.inc

.data
prompt BYTE "Select a choice", 0
prompt1 BYTE "1. x AND y", 0
prompt2 BYTE "2. x OR y", 0
prompt3 BYTE "3. NOT x", 0
prompt4 BYTE "4. x XOR y", 0
prompt5 BYTE "5. Exit Program", 0
prompt6 BYTE "Enter your choice: ", 0
prompt7 BYTE "AND operation", 0
prompt8 BYTE "OR operation", 0
prompt9 BYTE "NOT operation", 0
prompt10 BYTE "XOR operation", 0
prompt11 BYTE "Enter two hexadecimal integers", 0
prompt12 BYTE "Enter one hexadecimal integer", 0
prompt13 BYTE "Result: ", 0
CaseTable BYTE '1'
DOWRD Process_1
EntrySize = ($-CaseTable)
BYTE '2'
DOWRD Process_2
BYTE '3'
DOWRD Process_3
BYTE '4'
DOWRD Process_4
BYTE '5'
DOWRD Process_5
NumberOfEntries = ($-CaseTable) / EntrySize

.code
main proc
mov edx, OFFSET prompt
call WriteString

mov edx, OFFSET prompt1
call WriteString

mov edx, OFFSET prompt2
call WriteString

mov edx, OFFSET prompt3
call WriteString

mov edx, OFFSET prompt4
call WriteString

mov edx, OFFSET prompt5
call WriteString

mov edx, OFFSET prompt6
call WriteString

call Crlf
call ReadChar

mov ebx, OFFSET CaseTable
mov ecx, NumberOfEntries

L1:
cmp al, [ebx]
jne L2
call NEAR PTR [ebx+1]
call WriteString
call Crlf
jmp L3

L2:
add ebx, EntrySize
LOOP L1

L3: 
exit

main endp

Process_1 PROC
mov edx, OFFSET prompt7
call WriteString
call Crlf
mov edx, OFFSET prompt11
call WriteString

call ReadHex
mov ebx, eax
call ReadHex
and eax, ebx

mov edx, OFFSET prompt13
call WriteString
call WriteHex
call Crlf

ret
Process_1 ENDP

Process_2 PROC
mov edx, OFFSET prompt8
call WriteString
call Crlf
mov edx, OFFSET prompt11
call WriteString

call ReadHex
mov ebx, eax
call ReadHex
or eax, ebx

mov edx, OFFSET prompt13
call WriteString
call WriteHex
call Crlf

ret
Process_2 ENDP

Process_3 PROC
mov edx, OFFSET prompt9
call WriteString
call Crlf
mov edx, OFFSET prompt12
call WriteString

call ReadHex
not eax

mov edx, OFFSET prompt13
call WriteString
call WriteHex
call Crlf

ret
Process_3 ENDP

Process_4 PROC
mov edx, OFFSET prompt10
call WriteString
call Crlf
mov edx, OFFSET prompt11
call WriteString

call ReadHex
mov ebx, eax
call ReadHex
xor eax, ebx

mov edx, OFFSET prompt13
call WriteString
call WriteHex
call Crlf

ret
Process_4 ENDP

end main
